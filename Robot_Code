#include <AFMotor.h>  // Include the AFMotor library

// Define motors for the left and right side
AF_DCMotor leftMotorFront(1, MOTOR12_1KHZ);   // Motor 1 connected to M1 port
AF_DCMotor leftMotorBack(2, MOTOR12_1KHZ);    // Motor 2 connected to M2 port
AF_DCMotor rightMotorFront(3, MOTOR34_1KHZ);  // Motor 3 connected to M3 port
AF_DCMotor rightMotorBack(4, MOTOR34_1KHZ);   // Motor 4 connected to M4 port

const int buttonPin = 8;  // Digital pin for the joystick button
const int xPin = A0;      // Analog pin for X-axis
const int yPin = A1;      // Analog pin for Y-axis

int buttonState = 0;  // Variable to store the button state (0 for not pressed, 1 for pressed)
int xValue = 0;       // Variable to store the X-axis value (0-1023)
int yValue = 0;       // Variable to store the Y-axis value (0-1023)

void setup() {
  Serial.begin(9600);         // Initialize serial communication
  pinMode(buttonPin, INPUT);  // Set the buttonPin as an input
}

void loop() {

  // Read the state of the button
  buttonState = digitalRead(buttonPin);

  // Read the values of the X and Y axes
  xValue = analogRead(xPin);
  yValue = analogRead(yPin);

  // Print the values to the serial monitor
  Serial.print("Button State: ");
  Serial.print(buttonState);
  Serial.print(" | X-axis Value: ");
  Serial.print(xValue);
  Serial.print(" | Y-axis Value: ");
  Serial.println(yValue);

  // Check joystick movement for controlling the car
  if (yValue < 500) {
    // Move forward
    // Your code for moving forward goes here
    // For example: MoveForward();
  } else if (yValue > 600) {
    // Move backward
    // Your code for moving backward goes here
    // For example: MoveBackward();
  }

  if (xValue < 500) {
    Serial.println("Moving backward");
    moveBackward();
    delay(2000);  // Move backward for 2 seconds
  } else if (xValue > 600) {
    Serial.println("Moving forward");
    moveForward();
    delay(2000);  // Move forward for 2 seconds
  }

  // Check the button state for any additional actions
  if (buttonState == 1) {
    // Perform an action when the button is pressed
    // Your code for button press action goes here
    // For example: PerformButtonAction();
  }

  delay(100);  // Add a small delay to prevent excessive serial output and provide stability

  /*
  // Move Forward
  Serial.println("Moving forward");
  moveForward();
  delay(2000);  // Move forward for 2 seconds

  // Move Backward
  Serial.println("Moving backward");
  moveBackward();
  delay(2000);  // Move backward for 2 seconds

  // Perform Pivot Turn (Rotate on spot)
  Serial.println("Performing pivot turn");
  pivotTurn();
  delay(2000);  // Perform pivot turn for 2 seconds
  */
}

void moveForward() {
  // Set motor speed
  leftMotorFront.setSpeed(200);
  leftMotorBack.setSpeed(200);
  rightMotorFront.setSpeed(200);
  rightMotorBack.setSpeed(200);

  // Run all motors forward
  leftMotorFront.run(FORWARD);
  leftMotorBack.run(FORWARD);
  rightMotorFront.run(FORWARD);
  rightMotorBack.run(FORWARD);
}

void moveBackward() {
  // Set motor speed
  leftMotorFront.setSpeed(200);
  leftMotorBack.setSpeed(200);
  rightMotorFront.setSpeed(200);
  rightMotorBack.setSpeed(200);

  // Run all motors backward
  leftMotorFront.run(BACKWARD);
  leftMotorBack.run(BACKWARD);
  rightMotorFront.run(BACKWARD);
  rightMotorBack.run(BACKWARD);
}

void pivotTurn() {
  // Set motor speed
  leftMotorFront.setSpeed(200);
  leftMotorBack.setSpeed(200);
  rightMotorFront.setSpeed(200);
  rightMotorBack.setSpeed(200);

  // Run left motors forward and right motors backward for a pivot turn
  leftMotorFront.run(FORWARD);
  leftMotorBack.run(FORWARD);
  rightMotorFront.run(BACKWARD);
  rightMotorBack.run(BACKWARD);
}
